{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-04-15T00:19:49.263265Z", "invocation_id": "917e3fd3-2641-4340-8b2c-553a94ce42f3", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.113005Z", "completed_at": "2025-04-15T00:19:49.114067Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.116003Z", "completed_at": "2025-04-15T00:19:49.116013Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008867979049682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_duckdb_analytics_poc.raw_order_items", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.114287Z", "completed_at": "2025-04-15T00:19:49.114833Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.116385Z", "completed_at": "2025-04-15T00:19:49.116390Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009007930755615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_duckdb_analytics_poc.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.115049Z", "completed_at": "2025-04-15T00:19:49.115700Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.116723Z", "completed_at": "2025-04-15T00:19:49.116727Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009130001068115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_duckdb_analytics_poc.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.108547Z", "completed_at": "2025-04-15T00:19:49.118205Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.118908Z", "completed_at": "2025-04-15T00:19:49.118912Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011967182159423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbt_duckdb_analytics_poc.snapshot_history", "compiled": true, "compiled_code": "-- An\u00e1lisis de historial de cambios en snapshots\n-- Este an\u00e1lisis muestra el historial completo de cambios en los snapshots,\n-- permitiendo ver la evoluci\u00f3n de los datos a trav\u00e9s del tiempo\n\nWITH customer_history AS (\n    SELECT\n        customer_id,\n        first_name,\n        last_name,\n        email,\n        country,\n        dbt_valid_from,\n        dbt_valid_to,\n        CASE\n            WHEN dbt_valid_to IS NULL THEN 'Actual'\n            ELSE 'Hist\u00f3rico'\n        END AS version_status,\n        -- Calcular duraci\u00f3n de cada versi\u00f3n\n        DATEDIFF('hour', dbt_valid_from, COALESCE(dbt_valid_to, CURRENT_TIMESTAMP)) AS version_hours\n    FROM \"analytics_dev\".\"snapshots\".\"customers_snapshot\"\n),\n\nproduct_history AS (\n    SELECT\n        product_id,\n        product_name,\n        category,\n        price,\n        stock_quantity,\n        supplier,\n        dbt_valid_from,\n        dbt_valid_to,\n        CASE\n            WHEN dbt_valid_to IS NULL THEN 'Actual'\n            ELSE 'Hist\u00f3rico'\n        END AS version_status,\n        -- Calcular duraci\u00f3n de cada versi\u00f3n\n        DATEDIFF('hour', dbt_valid_from, COALESCE(dbt_valid_to, CURRENT_TIMESTAMP)) AS version_hours\n    FROM \"analytics_dev\".\"snapshots\".\"products_snapshot\"\n),\n\n-- Estad\u00edsticas sobre cambios por cliente\ncustomer_change_stats AS (\n    SELECT\n        customer_id,\n        COUNT(*) AS version_count,\n        MIN(dbt_valid_from) AS first_captured_at,\n        MAX(dbt_valid_from) AS last_changed_at\n    FROM customer_history\n    GROUP BY customer_id\n),\n\n-- Estad\u00edsticas sobre cambios por producto\nproduct_change_stats AS (\n    SELECT\n        product_id,\n        COUNT(*) AS version_count,\n        MIN(dbt_valid_from) AS first_captured_at,\n        MAX(dbt_valid_from) AS last_changed_at\n    FROM product_history\n    GROUP BY product_id\n)\n\n-- Para usar este an\u00e1lisis, descomenta la secci\u00f3n que quieras consultar:\n\n-- Historial completo de clientes:\nSELECT \n    ch.*,\n    ccs.version_count,\n    ccs.first_captured_at,\n    ccs.last_changed_at\nFROM customer_history ch\nJOIN customer_change_stats ccs ON ch.customer_id = ccs.customer_id\nORDER BY ch.customer_id, ch.dbt_valid_from DESC\n\n-- Historial completo de productos:\n-- SELECT \n--     ph.*,\n--     pcs.version_count,\n--     pcs.first_captured_at,\n--     pcs.last_changed_at\n-- FROM product_history ph\n-- JOIN product_change_stats pcs ON ph.product_id = pcs.product_id\n-- ORDER BY ph.product_id, ph.dbt_valid_from DESC\n\n-- Resumen de cambios por cliente:\n-- SELECT * FROM customer_change_stats ORDER BY version_count DESC\n\n-- Resumen de cambios por producto:\n-- SELECT * FROM product_change_stats ORDER BY version_count DESC", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.119418Z", "completed_at": "2025-04-15T00:19:49.120441Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.123697Z", "completed_at": "2025-04-15T00:19:49.123703Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006004810333251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_duckdb_analytics_poc.raw_products", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.122447Z", "completed_at": "2025-04-15T00:19:49.126524Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.126888Z", "completed_at": "2025-04-15T00:19:49.126892Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008561849594116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"raw_orders\"\n),\n\nrenamed as (\n    select\n        order_id,\n        customer_id,\n        CAST(order_date AS DATE) as order_date,\n        total_amount,\n        status,\n        payment_method,\n        -- Crear campos adicionales\n        extract(year from CAST(order_date AS DATE)) as order_year,\n        extract(month from CAST(order_date AS DATE)) as order_month,\n        case\n            when status = 'completed' then 1\n            else 0\n        end as is_completed\n    from source\n)\n\nselect * from renamed", "relation_name": "\"analytics_dev\".\"main\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.120703Z", "completed_at": "2025-04-15T00:19:49.127184Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.128972Z", "completed_at": "2025-04-15T00:19:49.128977Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011060953140258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.stg_order_items", "compiled": true, "compiled_code": "with source as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"raw_order_items\"\n),\n\nrenamed as (\n    select\n        order_item_id,\n        order_id,\n        product_id,\n        quantity,\n        unit_price,\n        discount,\n        -- Crear campos adicionales\n        quantity * unit_price as gross_amount,\n        quantity * unit_price * (1 - discount) as net_amount\n    from source\n)\n\nselect * from renamed", "relation_name": "\"analytics_dev\".\"main\".\"stg_order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.124578Z", "completed_at": "2025-04-15T00:19:49.127325Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.129532Z", "completed_at": "2025-04-15T00:19:49.129536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005489826202392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"raw_customers\"\n),\n\nrenamed as (\n    select\n        customer_id,\n        first_name,\n        last_name,\n        email,\n        CAST(registration_date AS DATE) as registration_date,\n        country,\n        -- Crear campos adicionales\n        first_name || ' ' || last_name as full_name,\n        current_date() - CAST(registration_date AS DATE) as days_since_registration\n    from source\n)\n\nselect * from renamed", "relation_name": "\"analytics_dev\".\"main\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.127467Z", "completed_at": "2025-04-15T00:19:49.130896Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.137594Z", "completed_at": "2025-04-15T00:19:49.137600Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011346817016601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.stg_products", "compiled": true, "compiled_code": "with source as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"raw_products\"\n),\n\nrenamed as (\n    select\n        product_id,\n        product_name,\n        category,\n        price,\n        stock_quantity,\n        supplier,\n        -- Crear campos adicionales\n        case\n            when stock_quantity <= 50 then 'Low'\n            when stock_quantity <= 100 then 'Medium'\n            else 'High'\n        end as stock_level,\n        price * stock_quantity as inventory_value\n    from source\n)\n\nselect * from renamed", "relation_name": "\"analytics_dev\".\"main\".\"stg_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.131358Z", "completed_at": "2025-04-15T00:19:49.143453Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.145893Z", "completed_at": "2025-04-15T00:19:49.145899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015905141830444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_orders_customer_id.af79d5e4b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"analytics_dev\".\"main\".\"stg_orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.138123Z", "completed_at": "2025-04-15T00:19:49.146213Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.146767Z", "completed_at": "2025-04-15T00:19:49.146771Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016307830810546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"analytics_dev\".\"main\".\"stg_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.140170Z", "completed_at": "2025-04-15T00:19:49.146566Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.147293Z", "completed_at": "2025-04-15T00:19:49.147296Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016298770904541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"stg_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.143626Z", "completed_at": "2025-04-15T00:19:49.147940Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.150027Z", "completed_at": "2025-04-15T00:19:49.150030Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0070590972900390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_order_items_order_id.2063801f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"analytics_dev\".\"main\".\"stg_order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.148427Z", "completed_at": "2025-04-15T00:19:49.157110Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.157531Z", "completed_at": "2025-04-15T00:19:49.157537Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010482072830200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_order_items_order_item_id.26a7e2bc35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"analytics_dev\".\"main\".\"stg_order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.153253Z", "completed_at": "2025-04-15T00:19:49.159925Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.160419Z", "completed_at": "2025-04-15T00:19:49.160423Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010161161422729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.relationships_stg_order_items_order_id__order_id__ref_stg_orders_.dbe9930c54", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from \"analytics_dev\".\"main\".\"stg_order_items\"\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"analytics_dev\".\"main\".\"stg_orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.150991Z", "completed_at": "2025-04-15T00:19:49.160243Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.162724Z", "completed_at": "2025-04-15T00:19:49.162728Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014533042907714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_order_items_product_id.5154a8a6f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"analytics_dev\".\"main\".\"stg_order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.157842Z", "completed_at": "2025-04-15T00:19:49.162537Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.163275Z", "completed_at": "2025-04-15T00:19:49.163278Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010287046432495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_stg_order_items_order_item_id.90e333a108", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"stg_order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.160716Z", "completed_at": "2025-04-15T00:19:49.164645Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.166488Z", "completed_at": "2025-04-15T00:19:49.166492Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00679779052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.dim_customers", "compiled": true, "compiled_code": "with customers as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"stg_customers\"\n),\n\ncustomer_orders as (\n    select\n        customer_id,\n        count(*) as order_count,\n        sum(total_amount) as lifetime_value\n    from \"analytics_dev\".\"main\".\"stg_orders\"\n    group by customer_id\n),\n\nfinal as (\n    select\n        c.customer_id,\n        c.first_name,\n        c.last_name,\n        c.full_name,\n        c.email,\n        c.registration_date,\n        c.country,\n        c.days_since_registration,\n        coalesce(co.order_count, 0) as order_count,\n        coalesce(co.lifetime_value, 0) as lifetime_value,\n        case\n            when coalesce(co.lifetime_value, 0) > 500 then 'High'\n            when coalesce(co.lifetime_value, 0) > 100 then 'Medium'\n            else 'Low'\n        end as customer_value_segment\n    from customers c\n    left join customer_orders co on c.customer_id = co.customer_id\n)\n\nselect * from final", "relation_name": "\"analytics_dev\".\"main\".\"dim_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.166770Z", "completed_at": "2025-04-15T00:19:49.167864Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.170349Z", "completed_at": "2025-04-15T00:19:49.170355Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006291866302490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.dbt_duckdb_analytics_poc.customers_snapshot", "compiled": true, "compiled_code": "\n\n\n\nselect \n    *,\n    current_timestamp as updated_at\nfrom \"analytics_dev\".\"main\".\"stg_customers\"\n", "relation_name": "\"analytics_dev\".\"snapshots\".\"customers_snapshot\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.164945Z", "completed_at": "2025-04-15T00:19:49.170776Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.171428Z", "completed_at": "2025-04-15T00:19:49.171435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007735013961791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.fct_orders", "compiled": true, "compiled_code": "with orders as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"stg_orders\"\n),\n\norder_items as (\n    select\n        order_id,\n        sum(quantity) as total_items,\n        sum(gross_amount) as gross_order_amount,\n        sum(net_amount) as net_order_amount\n    from \"analytics_dev\".\"main\".\"stg_order_items\"\n    group by order_id\n),\n\ncustomers as (\n    select\n        *\n    from \"analytics_dev\".\"main\".\"stg_customers\"\n),\n\nfinal as (\n    select\n        o.order_id,\n        o.customer_id,\n        c.full_name as customer_name,\n        c.country as customer_country,\n        o.order_date,\n        o.order_year,\n        o.order_month,\n        o.status,\n        o.payment_method,\n        o.total_amount as order_total_amount,\n        oi.total_items,\n        oi.gross_order_amount,\n        oi.net_order_amount,\n        o.is_completed,\n        case\n            when o.total_amount > 200 then 'Large'\n            when o.total_amount > 50 then 'Medium'\n            else 'Small'\n        end as order_size\n    from orders o\n    join order_items oi on o.order_id = oi.order_id\n    join customers c on o.customer_id = c.customer_id\n)\n\nselect * from final", "relation_name": "\"analytics_dev\".\"main\".\"fct_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.168074Z", "completed_at": "2025-04-15T00:19:49.174197Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.174743Z", "completed_at": "2025-04-15T00:19:49.174748Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01031494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_customers_customer_id.e2cfb1f9aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"analytics_dev\".\"main\".\"stg_customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.172369Z", "completed_at": "2025-04-15T00:19:49.180457Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.183010Z", "completed_at": "2025-04-15T00:19:49.183016Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012073040008544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_customers_email.d7cf761533", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email\nfrom \"analytics_dev\".\"main\".\"stg_customers\"\nwhere email is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.175038Z", "completed_at": "2025-04-15T00:19:49.183637Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.185706Z", "completed_at": "2025-04-15T00:19:49.185711Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01385188102722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.relationships_stg_orders_customer_id__customer_id__ref_stg_customers_.430bf21500", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"analytics_dev\".\"main\".\"stg_orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"analytics_dev\".\"main\".\"stg_customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.180680Z", "completed_at": "2025-04-15T00:19:49.186025Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.186690Z", "completed_at": "2025-04-15T00:19:49.186695Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01222085952758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_stg_customers_customer_id.c7614daada", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"stg_customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.184010Z", "completed_at": "2025-04-15T00:19:49.187693Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.190339Z", "completed_at": "2025-04-15T00:19:49.190347Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007632255554199219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.dim_products", "compiled": true, "compiled_code": "with products as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"stg_products\"\n),\n\nproduct_sales as (\n    select\n        p.product_id,\n        sum(oi.quantity) as total_quantity_sold,\n        sum(oi.net_amount) as total_sales\n    from \"analytics_dev\".\"main\".\"stg_order_items\" oi\n    join \"analytics_dev\".\"main\".\"stg_products\" p on oi.product_id = p.product_id\n    join \"analytics_dev\".\"main\".\"stg_orders\" o on oi.order_id = o.order_id\n    where o.status = 'completed'\n    group by p.product_id\n),\n\nfinal as (\n    select\n        p.product_id,\n        p.product_name,\n        p.category,\n        p.price,\n        p.stock_quantity,\n        p.supplier,\n        p.stock_level,\n        p.inventory_value,\n        coalesce(ps.total_quantity_sold, 0) as total_quantity_sold,\n        coalesce(ps.total_sales, 0) as total_sales,\n        case\n            when coalesce(ps.total_sales, 0) > 500 then 'High'\n            when coalesce(ps.total_sales, 0) > 100 then 'Medium'\n            else 'Low'\n        end as product_performance\n    from products p\n    left join product_sales ps on p.product_id = ps.product_id\n)\n\nselect * from final", "relation_name": "\"analytics_dev\".\"main\".\"dim_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.187870Z", "completed_at": "2025-04-15T00:19:49.189707Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.190645Z", "completed_at": "2025-04-15T00:19:49.190648Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004464864730834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.dbt_duckdb_analytics_poc.products_snapshot", "compiled": true, "compiled_code": "\n\n\n\nselect \n    *,\n    current_timestamp as updated_at\nfrom \"analytics_dev\".\"main\".\"stg_products\"\n", "relation_name": "\"analytics_dev\".\"snapshots\".\"products_snapshot\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.190929Z", "completed_at": "2025-04-15T00:19:49.196497Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.197090Z", "completed_at": "2025-04-15T00:19:49.197095Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009858846664428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_stg_products_product_id.6373b0acf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"analytics_dev\".\"main\".\"stg_products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.193445Z", "completed_at": "2025-04-15T00:19:49.201265Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.201728Z", "completed_at": "2025-04-15T00:19:49.201732Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011657953262329102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.relationships_stg_order_items_product_id__product_id__ref_stg_products_.886a82c26c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"analytics_dev\".\"main\".\"stg_order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"analytics_dev\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.197429Z", "completed_at": "2025-04-15T00:19:49.204964Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.207924Z", "completed_at": "2025-04-15T00:19:49.207931Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012050151824951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_stg_products_product_id.7d950a1467", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"stg_products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.199848Z", "completed_at": "2025-04-15T00:19:49.205181Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.208276Z", "completed_at": "2025-04-15T00:19:49.208279Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012075662612915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.assert_dim_customers_has_no_duplicates", "compiled": true, "compiled_code": "-- Test para verificar que no hay clientes duplicados\nwith customer_data as (\n    select\n        customer_id,\n        count(*) as customer_count\n    from \"analytics_dev\".\"main\".\"dim_customers\"\n    group by customer_id\n    having count(*) > 1\n)\n\nselect *\nfrom customer_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.202413Z", "completed_at": "2025-04-15T00:19:49.208845Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.209413Z", "completed_at": "2025-04-15T00:19:49.209418Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007950067520141602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_dim_customers_customer_id.dd91cd1c8d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"analytics_dev\".\"main\".\"dim_customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.205422Z", "completed_at": "2025-04-15T00:19:49.210078Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.212055Z", "completed_at": "2025-04-15T00:19:49.212062Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076999664306640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_dim_customers_customer_id.15c9f1e2fd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"dim_customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.210556Z", "completed_at": "2025-04-15T00:19:49.218261Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.218435Z", "completed_at": "2025-04-15T00:19:49.218439Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009268045425415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbt_duckdb_analytics_poc.customer_analysis", "compiled": true, "compiled_code": "-- An\u00e1lisis de clientes y sus patrones de compra\n-- Este an\u00e1lisis eval\u00faa el comportamiento de compra de los clientes\n\nSELECT \n    c.customer_id,\n    c.full_name,\n    c.country,\n    COUNT(o.order_id) AS total_orders,\n    SUM(o.net_order_amount) AS total_spent,\n    AVG(o.net_order_amount) AS avg_order_value,\n    MIN(o.order_date) AS first_order_date,\n    MAX(o.order_date) AS last_order_date,\n    DATEDIFF('day', MIN(o.order_date), MAX(o.order_date)) AS days_as_customer,\n    -- Frecuencia y recencia\n    CASE\n        WHEN COUNT(o.order_id) > 3 THEN 'Alto'\n        WHEN COUNT(o.order_id) > 1 THEN 'Medio'\n        ELSE 'Bajo'\n    END AS frequency_segment,\n    CASE\n        WHEN DATEDIFF('day', MAX(o.order_date), CURRENT_DATE()) < 30 THEN 'Reciente'\n        WHEN DATEDIFF('day', MAX(o.order_date), CURRENT_DATE()) < 90 THEN 'Regular'\n        ELSE 'Inactivo'\n    END AS recency_segment\nFROM \n    \"analytics_dev\".\"main\".\"dim_customers\" c\nLEFT JOIN \n    \"analytics_dev\".\"main\".\"fct_orders\" o ON c.customer_id = o.customer_id\nGROUP BY \n    c.customer_id, c.full_name, c.country\nORDER BY \n    total_spent DESC", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.212715Z", "completed_at": "2025-04-15T00:19:49.222287Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.222563Z", "completed_at": "2025-04-15T00:19:49.222568Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012916088104248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbt_duckdb_analytics_poc.order_trends_by_time", "compiled": true, "compiled_code": "-- An\u00e1lisis de tendencias de pedidos por per\u00edodo de tiempo\n-- Este an\u00e1lisis eval\u00faa las tendencias de ventas en diferentes per\u00edodos\n\nWITH date_orders AS (\n    SELECT\n        order_date,\n        EXTRACT('year' FROM order_date) AS year,\n        EXTRACT('month' FROM order_date) AS month,\n        EXTRACT('day' FROM order_date) AS day,\n        EXTRACT('dow' FROM order_date) AS day_of_week,\n        COUNT(order_id) AS order_count,\n        SUM(net_order_amount) AS total_revenue,\n        COUNT(DISTINCT customer_id) AS unique_customers,\n        SUM(total_items) AS items_sold,\n        SUM(net_order_amount) / COUNT(order_id) AS avg_order_value\n    FROM\n        \"analytics_dev\".\"main\".\"fct_orders\"\n    WHERE\n        status = 'completed'\n    GROUP BY\n        order_date\n),\n\nmonthly_orders AS (\n    SELECT\n        year,\n        month,\n        DATE_TRUNC('month', order_date) AS month_date,\n        SUM(order_count) AS order_count,\n        SUM(total_revenue) AS total_revenue,\n        SUM(unique_customers) AS unique_customers,\n        SUM(items_sold) AS items_sold,\n        AVG(avg_order_value) AS avg_order_value\n    FROM\n        date_orders\n    GROUP BY\n        year, month, month_date\n),\n\ndaily_avg AS (\n    SELECT\n        day_of_week,\n        AVG(order_count) AS avg_orders,\n        AVG(total_revenue) AS avg_revenue\n    FROM\n        date_orders\n    GROUP BY\n        day_of_week\n)\n\nSELECT\n    month_date,\n    order_count,\n    total_revenue,\n    unique_customers,\n    items_sold,\n    avg_order_value,\n    -- M\u00e9tricas de crecimiento mes a mes\n    LAG(total_revenue) OVER (ORDER BY month_date) AS prev_month_revenue,\n    CASE \n        WHEN LAG(total_revenue) OVER (ORDER BY month_date) > 0 \n        THEN (total_revenue - LAG(total_revenue) OVER (ORDER BY month_date)) / LAG(total_revenue) OVER (ORDER BY month_date) * 100 \n        ELSE NULL \n    END AS revenue_growth_pct\nFROM\n    monthly_orders\nORDER BY\n    month_date", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.223485Z", "completed_at": "2025-04-15T00:19:49.228045Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.228808Z", "completed_at": "2025-04-15T00:19:49.228814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0057528018951416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.relationships_fct_orders_customer_id__customer_id__ref_dim_customers_.d5636051d4", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"analytics_dev\".\"main\".\"fct_orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"analytics_dev\".\"main\".\"dim_customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.219254Z", "completed_at": "2025-04-15T00:19:49.228316Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.229413Z", "completed_at": "2025-04-15T00:19:49.229417Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010561943054199219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_fct_orders_order_id.4e687af8d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"analytics_dev\".\"main\".\"fct_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.214751Z", "completed_at": "2025-04-15T00:19:49.228613Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.229727Z", "completed_at": "2025-04-15T00:19:49.229730Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017281055450439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.assert_fct_orders_matches_stg_orders", "compiled": true, "compiled_code": "-- Test para verificar que todos los pedidos en staging est\u00e1n en fact_orders\nwith staging_orders as (\n    select\n        order_id\n    from \"analytics_dev\".\"main\".\"stg_orders\"\n),\n\nfact_orders as (\n    select\n        order_id\n    from \"analytics_dev\".\"main\".\"fct_orders\"\n)\n\nselect\n    so.order_id\nfrom staging_orders so\nleft join fact_orders fo on so.order_id = fo.order_id\nwhere fo.order_id is null", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.216589Z", "completed_at": "2025-04-15T00:19:49.229210Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.230216Z", "completed_at": "2025-04-15T00:19:49.230218Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015703916549682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_fct_orders_customer_id.16fe324f7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"analytics_dev\".\"main\".\"fct_orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.234550Z", "completed_at": "2025-04-15T00:19:49.240576Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.241032Z", "completed_at": "2025-04-15T00:19:49.241039Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009852170944213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.validate_order_dates", "compiled": true, "compiled_code": "-- Validar que las fechas de pedidos son l\u00f3gicas\n-- Esta prueba verifica que todas las fechas de pedido son:\n-- 1. No est\u00e1n en el futuro\n-- 2. No son anteriores a 2015 (asumiendo que es una fecha razonable para el negocio)\n\nWITH validation AS (\n    SELECT\n        order_id,\n        order_date,\n        CURRENT_DATE() AS today\n    FROM \"analytics_dev\".\"main\".\"fct_orders\"\n    WHERE order_date > CURRENT_DATE() OR order_date < '2015-01-01'\n)\n\nSELECT * FROM validation", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.232339Z", "completed_at": "2025-04-15T00:19:49.240852Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.241811Z", "completed_at": "2025-04-15T00:19:49.241816Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011011838912963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_fct_orders_order_id.523ddb6ce5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"fct_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.236412Z", "completed_at": "2025-04-15T00:19:49.241423Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.242552Z", "completed_at": "2025-04-15T00:19:49.242557Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011162757873535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbt_duckdb_analytics_poc.customer_orders_analysis", "compiled": true, "compiled_code": "-- An\u00e1lisis de patrones de compra de clientes\n-- Este an\u00e1lisis muestra el comportamiento de compra de los clientes, \n-- incluyendo frecuencia de compra, valor del tiempo de vida, y productos preferidos\n\nWITH customer_orders AS (\n    SELECT\n        c.customer_id,\n        c.full_name,\n        c.email,\n        o.order_id,\n        o.order_date,\n        o.status as order_status,\n        o.net_order_amount as order_total,\n        p.product_id,\n        p.product_name,\n        p.category as product_category,\n        p.price as product_price,\n        oi.quantity\n    FROM \"analytics_dev\".\"main\".\"dim_customers\" c\n    LEFT JOIN \"analytics_dev\".\"main\".\"fct_orders\" o ON c.customer_id = o.customer_id\n    LEFT JOIN \"analytics_dev\".\"main\".\"stg_order_items\" oi ON o.order_id = oi.order_id\n    LEFT JOIN \"analytics_dev\".\"main\".\"dim_products\" p ON oi.product_id = p.product_id\n),\n\ncustomer_metrics AS (\n    SELECT\n        customer_id,\n        full_name,\n        email,\n        COUNT(DISTINCT order_id) AS order_count,\n        SUM(order_total) AS total_spend,\n        MIN(order_date) AS first_order_date,\n        MAX(order_date) AS last_order_date,\n        DATEDIFF('day', MIN(order_date), MAX(order_date)) + 1 AS customer_lifetime_days,\n        SUM(order_total) / NULLIF(COUNT(DISTINCT order_id), 0) AS avg_order_value\n    FROM customer_orders\n    GROUP BY 1, 2, 3\n),\n\nproduct_preferences AS (\n    SELECT\n        customer_id,\n        product_category,\n        COUNT(*) AS purchase_count,\n        SUM(quantity) AS total_quantity\n    FROM customer_orders\n    WHERE product_category IS NOT NULL\n    GROUP BY 1, 2\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY purchase_count DESC) = 1\n)\n\nSELECT\n    cm.*,\n    pp.product_category AS preferred_category,\n    pp.purchase_count AS preferred_category_purchases,\n    CASE\n        WHEN order_count >= 5 THEN 'High'\n        WHEN order_count >= 2 THEN 'Medium'\n        ELSE 'Low'\n    END AS engagement_level,\n    CASE\n        WHEN total_spend >= 1000 THEN 'Premium'\n        WHEN total_spend >= 500 THEN 'Mid-tier'\n        ELSE 'Budget'\n    END AS customer_value_segment\nFROM customer_metrics cm\nLEFT JOIN product_preferences pp ON cm.customer_id = pp.customer_id\nORDER BY total_spend DESC", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.238409Z", "completed_at": "2025-04-15T00:19:49.241626Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.242926Z", "completed_at": "2025-04-15T00:19:49.242931Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011159658432006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbt_duckdb_analytics_poc.product_performance", "compiled": true, "compiled_code": "-- An\u00e1lisis de rendimiento de productos\n-- Este an\u00e1lisis eval\u00faa el rendimiento de los productos basado en ventas,\n-- frecuencia de compra y contribuci\u00f3n a los ingresos totales\n\nWITH product_sales AS (\n    SELECT\n        p.product_id,\n        p.product_name,\n        p.category as product_category,\n        p.price as product_price,\n        SUM(oi.quantity) AS total_units_sold,\n        COUNT(DISTINCT o.order_id) AS order_count,\n        COUNT(DISTINCT o.customer_id) AS customer_count,\n        SUM(p.price * oi.quantity) AS total_revenue\n    FROM \"analytics_dev\".\"main\".\"dim_products\" p\n    JOIN \"analytics_dev\".\"main\".\"stg_order_items\" oi ON p.product_id = oi.product_id\n    JOIN \"analytics_dev\".\"main\".\"fct_orders\" o ON oi.order_id = o.order_id\n    WHERE o.status = 'completed'\n    GROUP BY 1, 2, 3, 4\n),\n\ncategory_totals AS (\n    SELECT\n        product_category,\n        SUM(total_revenue) AS category_revenue,\n        SUM(total_units_sold) AS category_units_sold\n    FROM product_sales\n    GROUP BY 1\n),\n\noverall_totals AS (\n    SELECT\n        SUM(total_revenue) AS total_revenue,\n        SUM(total_units_sold) AS total_units_sold\n    FROM product_sales\n)\n\nSELECT\n    ps.*,\n    ps.total_revenue / NULLIF(ps.total_units_sold, 0) AS avg_selling_price,\n    ps.total_revenue / NULLIF(ps.order_count, 0) AS revenue_per_order,\n    ps.total_units_sold / NULLIF(ps.order_count, 0) AS units_per_order,\n    ps.total_revenue / NULLIF(ct.category_revenue, 0) * 100 AS pct_category_revenue,\n    ps.total_units_sold / NULLIF(ct.category_units_sold, 0) * 100 AS pct_category_units,\n    ps.total_revenue / NULLIF(ot.total_revenue, 0) * 100 AS pct_total_revenue,\n    ps.total_units_sold / NULLIF(ot.total_units_sold, 0) * 100 AS pct_total_units,\n    CASE\n        WHEN ps.total_revenue > (ct.category_revenue * 0.25) THEN 'High'\n        WHEN ps.total_revenue > (ct.category_revenue * 0.10) THEN 'Medium'\n        ELSE 'Low'\n    END AS category_importance,\n    RANK() OVER (ORDER BY ps.total_revenue DESC) AS revenue_rank,\n    RANK() OVER (PARTITION BY ps.product_category ORDER BY ps.total_revenue DESC) AS category_revenue_rank\nFROM product_sales ps\nJOIN category_totals ct ON ps.product_category = ct.product_category\nCROSS JOIN overall_totals ot\nORDER BY ps.total_revenue DESC", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.247312Z", "completed_at": "2025-04-15T00:19:49.256553Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.256855Z", "completed_at": "2025-04-15T00:19:49.256861Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012526750564575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbt_duckdb_analytics_poc.revenue_trends", "compiled": true, "compiled_code": "-- An\u00e1lisis de tendencias de ingresos\n-- Este an\u00e1lisis examina las tendencias de ingresos a lo largo del tiempo,\n-- mostrando patrones mensuales, trimestrales y anuales\n\nWITH daily_sales AS (\n    SELECT\n        o.order_date,\n        DATE_TRUNC('month', o.order_date) AS month_date,\n        DATE_TRUNC('quarter', o.order_date) AS quarter_date,\n        DATE_TRUNC('year', o.order_date) AS year_date,\n        p.category AS product_category,\n        SUM(o.net_order_amount) AS daily_revenue,\n        COUNT(DISTINCT o.order_id) AS order_count,\n        COUNT(DISTINCT o.customer_id) AS customer_count,\n        SUM(o.net_order_amount) / NULLIF(COUNT(DISTINCT o.order_id), 0) AS avg_order_value\n    FROM \"analytics_dev\".\"main\".\"fct_orders\" o\n    JOIN \"analytics_dev\".\"main\".\"stg_order_items\" oi ON o.order_id = oi.order_id\n    JOIN \"analytics_dev\".\"main\".\"dim_products\" p ON oi.product_id = p.product_id\n    WHERE o.status = 'completed'\n    GROUP BY 1, 2, 3, 4, 5\n),\n\nmonthly_sales AS (\n    SELECT\n        month_date,\n        product_category,\n        SUM(daily_revenue) AS monthly_revenue,\n        SUM(order_count) AS monthly_orders,\n        COUNT(DISTINCT order_date) AS active_days,\n        SUM(customer_count) AS monthly_customers,\n        SUM(daily_revenue) / NULLIF(SUM(order_count), 0) AS monthly_aov\n    FROM daily_sales\n    GROUP BY 1, 2\n),\n\nquarterly_sales AS (\n    SELECT\n        quarter_date,\n        product_category,\n        SUM(daily_revenue) AS quarterly_revenue,\n        SUM(order_count) AS quarterly_orders,\n        COUNT(DISTINCT month_date) AS active_months,\n        SUM(customer_count) AS quarterly_customers\n    FROM daily_sales\n    GROUP BY 1, 2\n),\n\nyearly_sales AS (\n    SELECT\n        year_date,\n        product_category,\n        SUM(daily_revenue) AS yearly_revenue,\n        SUM(order_count) AS yearly_orders,\n        COUNT(DISTINCT quarter_date) AS active_quarters,\n        SUM(customer_count) AS yearly_customers\n    FROM daily_sales\n    GROUP BY 1, 2\n)\n\n-- Monthly revenue trends\nSELECT\n    ms.month_date,\n    ms.product_category,\n    ms.monthly_revenue,\n    ms.monthly_orders,\n    ms.active_days,\n    ms.monthly_customers,\n    ms.monthly_aov,\n    LAG(ms.monthly_revenue) OVER (PARTITION BY ms.product_category ORDER BY ms.month_date) AS prev_month_revenue,\n    ms.monthly_revenue - LAG(ms.monthly_revenue) OVER (PARTITION BY ms.product_category ORDER BY ms.month_date) AS revenue_change,\n    CASE\n        WHEN LAG(ms.monthly_revenue) OVER (PARTITION BY ms.product_category ORDER BY ms.month_date) = 0 THEN NULL\n        ELSE (ms.monthly_revenue - LAG(ms.monthly_revenue) OVER (PARTITION BY ms.product_category ORDER BY ms.month_date)) / \n            NULLIF(LAG(ms.monthly_revenue) OVER (PARTITION BY ms.product_category ORDER BY ms.month_date), 0) * 100\n    END AS revenue_pct_change,\n    SUM(ms.monthly_revenue) OVER (PARTITION BY ms.product_category ORDER BY ms.month_date) AS cumulative_revenue\nFROM monthly_sales ms\nORDER BY ms.product_category, ms.month_date", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.252444Z", "completed_at": "2025-04-15T00:19:49.257934Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.259533Z", "completed_at": "2025-04-15T00:19:49.259537Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013032913208007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.not_null_dim_products_product_id.c8aba288d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"analytics_dev\".\"main\".\"dim_products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.254407Z", "completed_at": "2025-04-15T00:19:49.259324Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.260035Z", "completed_at": "2025-04-15T00:19:49.260038Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013282060623168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.unique_dim_products_product_id.ef7b2a9985", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics_dev\".\"main\".\"dim_products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.249694Z", "completed_at": "2025-04-15T00:19:49.259830Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.260473Z", "completed_at": "2025-04-15T00:19:49.260477Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014518022537231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_duckdb_analytics_poc.core_business_metrics", "compiled": true, "compiled_code": "with orders as (\n    select \n        *\n    from \"analytics_dev\".\"main\".\"fct_orders\"\n),\n\ncustomers as (\n    select\n        *\n    from \"analytics_dev\".\"main\".\"dim_customers\"\n),\n\nproducts as (\n    select\n        *\n    from \"analytics_dev\".\"main\".\"dim_products\"\n),\n\ndaily_sales as (\n    select\n        order_date,\n        sum(net_order_amount) as daily_revenue,\n        count(distinct order_id) as order_count,\n        count(distinct customer_id) as customer_count,\n        sum(total_items) as items_sold\n    from orders\n    where status = 'completed'\n    group by order_date\n),\n\ncountry_sales as (\n    select\n        customer_country,\n        count(distinct order_id) as order_count,\n        sum(net_order_amount) as total_revenue,\n        count(distinct customer_id) as customer_count,\n        sum(net_order_amount) / count(distinct customer_id) as revenue_per_customer\n    from orders\n    where status = 'completed'\n    group by customer_country\n),\n\ncategory_sales as (\n    select\n        p.category,\n        count(distinct o.order_id) as order_count,\n        sum(oi.net_amount) as total_revenue,\n        sum(oi.quantity) as quantity_sold\n    from \"analytics_dev\".\"main\".\"stg_order_items\" oi\n    join \"analytics_dev\".\"main\".\"stg_orders\" o on oi.order_id = o.order_id\n    join \"analytics_dev\".\"main\".\"stg_products\" p on oi.product_id = p.product_id\n    where o.status = 'completed'\n    group by p.category\n),\n\npayment_method_analysis as (\n    select\n        payment_method,\n        count(distinct order_id) as order_count,\n        sum(net_order_amount) as total_revenue,\n        avg(net_order_amount) as avg_order_value\n    from orders\n    where status = 'completed'\n    group by payment_method\n),\n\nfinal as (\n    select\n        'Overall' as metric_group,\n        'Total Revenue' as metric_name,\n        cast(sum(net_order_amount) as varchar) as metric_value\n    from orders\n    where status = 'completed'\n    \n    union all\n    \n    select\n        'Overall' as metric_group,\n        'Total Orders' as metric_name,\n        cast(count(distinct order_id) as varchar) as metric_value\n    from orders\n    where status = 'completed'\n    \n    union all\n    \n    select\n        'Overall' as metric_group,\n        'Average Order Value' as metric_name,\n        cast(avg(net_order_amount) as varchar) as metric_value\n    from orders\n    where status = 'completed'\n    \n    union all\n    \n    select\n        'Overall' as metric_group,\n        'Total Customers' as metric_name,\n        cast(count(distinct customer_id) as varchar) as metric_value\n    from customers\n    \n    union all\n    \n    select\n        'Overall' as metric_group,\n        'Total Products' as metric_name,\n        cast(count(distinct product_id) as varchar) as metric_value\n    from products\n    \n    union all\n    \n    (select\n        'Time' as metric_group,\n        'Date with Highest Revenue' as metric_name,\n        cast(order_date as varchar) as metric_value\n    from daily_sales\n    order by daily_revenue desc\n    limit 1)\n    \n    union all\n    \n    (select\n        'Geography' as metric_group,\n        'Top Country by Revenue' as metric_name,\n        customer_country as metric_value\n    from country_sales\n    order by total_revenue desc\n    limit 1)\n    \n    union all\n    \n    (select\n        'Product' as metric_group,\n        'Top Category by Revenue' as metric_name,\n        category as metric_value\n    from category_sales\n    order by total_revenue desc\n    limit 1)\n    \n    union all\n    \n    (select\n        'Customer' as metric_group,\n        'Top Payment Method' as metric_name,\n        payment_method as metric_value\n    from payment_method_analysis\n    order by order_count desc\n    limit 1)\n)\n\nselect * from final", "relation_name": "\"analytics_dev\".\"main\".\"core_business_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-15T00:19:49.258156Z", "completed_at": "2025-04-15T00:19:49.260869Z"}, {"name": "execute", "started_at": "2025-04-15T00:19:49.261212Z", "completed_at": "2025-04-15T00:19:49.261218Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0038552284240722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_duckdb_analytics_poc.validate_price_positive", "compiled": true, "compiled_code": "-- Validar que todos los precios son positivos\n-- Esta prueba verifica que no hay productos con precios negativos o cero\n\nWITH validation AS (\n    SELECT\n        product_id,\n        product_name,\n        price\n    FROM \"analytics_dev\".\"main\".\"dim_products\"\n    WHERE price <= 0\n)\n\nSELECT * FROM validation", "relation_name": null, "batch_results": null}], "elapsed_time": 0.39072632789611816, "args": {"indirect_selection": "eager", "favor_state": false, "source_freshness_run_project_hooks": false, "invocation_command": "dbt compile", "strict_mode": false, "introspect": true, "exclude": [], "profiles_dir": "/Users/rafaelnoriega/Documents/github/dbt-duckdb-analytics-poc", "output": "text", "which": "compile", "use_colors_file": true, "empty": false, "macro_debugging": false, "state_modified_compare_vars": false, "cache_selected_only": false, "state_modified_compare_more_unrendered_values": false, "inject_ephemeral_ctes": true, "warn_error_options": {"include": [], "exclude": []}, "require_yaml_configuration_for_mf_time_spines": false, "project_dir": "/Users/rafaelnoriega/Documents/github/dbt-duckdb-analytics-poc", "print": true, "log_format": "default", "populate_cache": true, "quiet": false, "log_path": "/Users/rafaelnoriega/Documents/github/dbt-duckdb-analytics-poc/logs", "require_batched_execution_for_custom_microbatch_strategy": false, "version_check": true, "printer_width": 80, "send_anonymous_usage_stats": true, "show_resource_report": false, "static_parser": true, "use_colors": true, "vars": {}, "skip_nodes_if_on_run_start_fails": false, "require_nested_cumulative_type_params": false, "log_level": "info", "write_json": true, "log_format_file": "debug", "log_level_file": "debug", "partial_parse_file_diff": true, "log_file_max_bytes": 10485760, "require_resource_names_without_spaces": false, "defer": false, "partial_parse": true, "require_explicit_package_overrides_for_builtin_materializations": true, "select": []}}